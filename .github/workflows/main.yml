name: build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  security:
    name: Security
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: [ '8.3' ] # Note: This workflow requires only the LATEST version of PHP
        os: [ ubuntu-latest ]
        stability: [prefer-stable]

    steps:
      # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Security Advisories
        run: composer require --dev roave/security-advisories:dev-latest
  static-analysis:
    name: Psalm
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: ['8.3'] # Note: This workflow requires only the LATEST version of PHP
        os: [ubuntu-latest]
        stability: [prefer-stable]

    steps:
      # General Steps
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Static Analysis
        run: |
          vendor/bin/psalm --no-cache --shepherd --stats --output-format=checkstyle --php-version=${{ matrix.php }}

  test:
    name: Build (${{matrix.php}}, ${{ matrix.os }}, ${{ matrix.stability }})
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        php: ['8.1', '8.2', '8.3']
        os: [ubuntu-latest]
        stability: [prefer-lowest, prefer-stable]

    steps:
      - name: Set Git To Use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v3

      - name: Validate composer.json
        run: composer validate --strict

      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          echo "::set-output name=dir::$(composer config cache-files-dir)"

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        run: composer update --${{ matrix.stability }} --prefer-dist --no-interaction --no-progress

      # Execution
      - name: Execute Tests
        run: XDEBUG_MODE=coverage vendor/bin/phpunit --coverage-clover=coverage.clover
